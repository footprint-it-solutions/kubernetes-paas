kind: Namespace
apiVersion: v1
metadata:
  name: linkerd-multicluster
  labels:
    linkerd.io/extension: multicluster
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: linkerd-gateway-config
  labels:
    linkerd.io/control-plane-component: gateway
    linkerd.io/extension: multicluster
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.10.2
  namespace: linkerd-multicluster
data:
  nginx.conf: |-
    error_log stderr;
    pid /tmp/nginx.pid;
    events {
    }
    stream {
       server {
           listen     4180;
           proxy_pass 127.0.0.1:4140;
       }
    }
    http {
      client_body_temp_path /tmp/client_temp;
      proxy_temp_path       /tmp/proxy_temp_path;
      fastcgi_temp_path     /tmp/fastcgi_temp;
      uwsgi_temp_path       /tmp/uwsgi_temp;
      scgi_temp_path        /tmp/scgi_temp;
      server {
          listen     4181;
          location = /health {
            access_log off;
            return 200 "healthy\n";
          }

          location ~* ^/(.*)$ {
            deny all;
          }
      }
      server {
          listen     8888;
          location /health-local {
            access_log off;
            return 200 "healthy\n";
          }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.10.2
  labels:
    app.kubernetes.io/name: gateway
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.10.2
    linkerd.io/control-plane-component: gateway
    app: linkerd-gateway
    linkerd.io/extension: multicluster
  name: linkerd-gateway
  namespace: linkerd-multicluster
spec:
  replicas: 1
  selector:
    matchLabels:
      app: linkerd-gateway
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.10.2
        linkerd.io/inject: enabled
        config.linkerd.io/proxy-require-identity-inbound-ports: "4181,4143,4180"
        config.linkerd.io/enable-gateway: "true"
      labels:
        app: linkerd-gateway
    spec:
      volumes:
        - name: config
          configMap:
            name: linkerd-gateway-config
        - name: tmp
          emptyDir: {}
      containers:
        - name: nginx
          readinessProbe:
            failureThreshold: 7
            httpGet:
              path: /health-local
              port: 8888
          livenessProbe:
            httpGet:
              path: /health-local
              port: 8888
            initialDelaySeconds: 10
          image: nginx:1.17
          ports:
            - name: mc-relay
              containerPort: 4180
            - name: mc-probe
              containerPort: 4181
            - name: local-probe
              containerPort: 8888
          securityContext:
            runAsUser: 1001
          volumeMounts:
            - name: config
              mountPath: /etc/nginx
            - name: tmp
              mountPath: /tmp
      serviceAccountName: linkerd-gateway
---
apiVersion: v1
kind: Service
metadata:
  name: linkerd-gateway
  namespace: linkerd-multicluster
  labels:
    linkerd.io/extension: multicluster
  annotations:
    mirror.linkerd.io/gateway-identity: linkerd-gateway.linkerd-multicluster.serviceaccount.identity.linkerd.cluster.local
    mirror.linkerd.io/probe-period: "3"
    mirror.linkerd.io/probe-path: /health
    mirror.linkerd.io/multicluster-gateway: "true"
    linkerd.io/control-plane-component: gateway
    linkerd.io/created-by: linkerd/cli stable-2.10.2
spec:
  ports:
  - name: mc-gateway
    port: 4143
    protocol: TCP
  - name: mc-probe
    port: 4181
    protocol: TCP
  selector:
    app: linkerd-gateway
  type: LoadBalancer
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-gateway
  namespace: linkerd-multicluster
  labels:
    linkerd.io/extension: multicluster
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-service-mirror-remote-access-default
  namespace: linkerd-multicluster
  labels:
    linkerd.io/extension: multicluster
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.10.2
rules:
- apiGroups: [""]
  resources: ["services"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]  
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: linkerd-service-mirror-remote-access-default
  namespace: linkerd-multicluster
  labels:
    linkerd.io/extension: multicluster
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.10.2
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-service-mirror-remote-access-default
  namespace: linkerd-multicluster
  labels:
    linkerd.io/extension: multicluster
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.10.2
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-service-mirror-remote-access-default
subjects:
- kind: ServiceAccount
  name: linkerd-service-mirror-remote-access-default
  namespace: linkerd-multicluster
---
###
### Link CRD
###
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: links.multicluster.linkerd.io
  labels:
    linkerd.io/extension: multicluster
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.10.2
spec:
  group: multicluster.linkerd.io
  versions:
  - name: v1alpha1
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            properties:
              clusterCredentialsSecret:
                description: Kubernetes secret of target cluster
                type: string
              gatewayAddress:
                description: Gateway address of target cluster
                type: string
              gatewayIdentity:
                description: Gateway Identity FQDN
                type: string
              gatewayPort:
                description: Gateway Port
                type: string
              probeSpec:
                description: Spec for gateway health probe
                type: object
                properties:
                  path:
                    description: Path of remote gateway health endpoint
                    type: string
                  period:
                    description: Interval in between probe requests
                    type: string
                  port:
                    description: Port of remote gateway health endpoint
                    type: string
              selector:
                description: Kubernetes Label Selector
                type: object
                properties:
                  matchExpressions:
                    description: List of selector requirements
                    type: array
                    items:
                      description: A selector item requires a key and an operator
                      type: object
                      required:
                      - key
                      - operator
                      properties:
                        key:
                          description: Label key that selector should apply to
                          type: string
                        operator:
                          description: Evaluation of a label in relation to set
                          type: string
              targetClusterName:
                description: Name of target cluster to link to
                type: string
              targetClusterDomain:
                description: Domain name of target cluster to link to
                type: string
              targetClusterLinkerdNamespace:
                description: Name of namespace Linkerd control plane is installed in on target cluster
                type: string
  scope: Namespaced
  names:
    plural: links
    singular: link
    kind: Link
---
